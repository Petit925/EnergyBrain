from main_logic import load_pdf_text, chunk_text, embed_texts, upload_to_pinecone

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ–¥–Ω–æ–≥–æ PDF –∑ —Ç–µ–≥–æ–º-–¥–∂–µ—Ä–µ–ª–æ–º
def process_pdf_to_pinecone(filepath, source_tag, index_name="energybrain-index"):
    print(f"üîÑ –û–±—Ä–æ–±–∫–∞ —Ñ–∞–π–ª—É: {filepath}")
    
    # –ö—Ä–æ–∫ 1: –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –∑ PDF
    text = load_pdf_text(filepath)

    # –ö—Ä–æ–∫ 2: —Ä–æ–∑–±–∏—Ç—Ç—è –Ω–∞ chunks
    chunks = chunk_text(text)

    # –ö—Ä–æ–∫ 3: —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–º–±–µ–¥—ñ–Ω–≥—ñ–≤
    embeddings = []
    for chunk in chunks:
        emb = embed_texts([chunk])[0]  # –ø–æ–≤–µ—Ä—Ç–∞—î [(chunk, embedding)]
        # –î–æ–¥–∞—î–º–æ –º–µ—Ç–∞–¥–∞–Ω—ñ –∑ —Ç–µ–≥–æ–º-–¥–∂–µ—Ä–µ–ª–æ–º
        embeddings.append((chunk, emb[1], source_tag))  

    # –ö—Ä–æ–∫ 4: –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤ Pinecone
    formatted_vectors = [
        {
            "id": f"{source_tag}-chunk-{i}",
            "values": emb,
            "metadata": {"text": text, "source": source_tag}
        }
        for i, (text, emb, source_tag) in enumerate(embeddings)
    ]

    upload_to_pinecone(formatted_vectors, index_name=index_name)
    print(f"‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: {len(formatted_vectors)} chunks –∑ '{filepath}' –≤ —ñ–Ω–¥–µ–∫—Å '{index_name}'.")

# üöÄ –í–∏–∫–æ–Ω—É—î–º–æ –¥–ª—è –¥–≤–æ—Ö —Ñ–∞–π–ª—ñ–≤:
process_pdf_to_pinecone("compliance_manual.pdf", source_tag="compliance")
process_pdf_to_pinecone("procurement_manual.pdf", source_tag="procurement")
