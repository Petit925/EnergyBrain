import streamlit as st
from main import search_index, build_prompt, ask_gpt

st.set_page_config(page_title="–ê—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∫–æ–º–ø–ª–∞—î–Ω—Å—É iC consulenten", page_icon="üìÑ")

st.title("üìÑ –ê—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∫–æ–º–ø–ª–∞—î–Ω—Å—É iC consulenten")
st.caption("(Compliance Assistant)")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —ñ—Å—Ç–æ—Ä—ñ—ó —á–∞—Ç—É
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

# –í–∏–≤–µ–¥–µ–Ω–Ω—è –≤—Å—ñ—î—ó —ñ—Å—Ç–æ—Ä—ñ—ó —á–∞—Ç—É
for chat in st.session_state.chat_history:
    with st.chat_message("user"):
        st.write(chat["question"])
    with st.chat_message("assistant"):
        st.success(chat["answer"])

# –ü–æ–ª–µ –≤–≤–æ–¥—É –≤ —Å–∞–º–æ–º—É –Ω–∏–∑—É
if prompt := st.chat_input("–í–≤–µ–¥—ñ—Ç—å –∑–∞–ø–∏—Ç, —â–æ–¥–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –∫–æ–º–ø–ª–∞—î–Ω—Å—É —É iC consulenten:"):
    matches = search_index(prompt)
    final_prompt = build_prompt(prompt, matches)
    response = ask_gpt(final_prompt)

    # –î–æ–¥–∞—Ç–∏ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó
    st.session_state.chat_history.append({
        "question": prompt,
        "answer": response
    })

    # –†–µ—Ä–µ–Ω–¥–µ—Ä (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —É chat_input, rerun –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç—É
if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç–∏ —á–∞—Ç"):
    st.session_state.chat_history = []
    st.rerun()
