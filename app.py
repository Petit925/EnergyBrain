import streamlit as st
from main import search_index, build_prompt, ask_gpt

st.set_page_config(page_title="–ê—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∫–æ–º–ø–ª–∞—î–Ω—Å—É iC consulenten", page_icon="üìÑ")

st.title("üìÑ –ê—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∫–æ–º–ø–ª–∞—î–Ω—Å—É iC consulenten")
st.caption("(Compliance Assistant)")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —ñ—Å—Ç–æ—Ä—ñ—ó —á–∞—Ç—É
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

# –§–æ—Ä–º–∞ –¥–ª—è –∑–∞–ø–∏—Ç—É
with st.form("chat_form"):
    st.markdown("üí¨ **–í–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –∑–∞–ø–∏—Ç, —â–æ–¥–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –∫–æ–º–ø–ª–∞—î–Ω—Å—É —É iC consulenten:**")
    query = st.text_input("–©–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?", label_visibility="collapsed")
    submitted = st.form_submit_button("–ó–∞–ø–∏—Ç–∞—Ç–∏")

# –ü—ñ—Å–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É
if submitted and query:
    matches = search_index(query)
    prompt = build_prompt(query, matches)
    response = ask_gpt(prompt)

    st.session_state.chat_history.append({
        "question": query,
        "answer": response
    })

    st.rerun()

# –í–∏–≤–µ–¥–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —á–∞—Ç—É
for chat in st.session_state.chat_history:
    with st.chat_message("user"):
        st.write(chat["question"])
    with st.chat_message("assistant"):
        st.success(chat["answer"])

# –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç—É
if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç–∏ —á–∞—Ç"):
    st.session_state.chat_history = []
    st.rerun()
