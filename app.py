import streamlit as st
from main import search_index, build_prompt, ask_gpt

st.set_page_config(page_title="–ê—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∫–æ–º–ø–ª–∞—î–Ω—Å—É", page_icon="üìÑ")

st.title("üìÑ –ê—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∫–æ–º–ø–ª–∞—î–Ω—Å—É iC consulenten")
st.caption("(Compliance Assistant)")
st.markdown("üí¨ –í–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –∑–∞–ø–∏—Ç, —â–æ–¥–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –∫–æ–º–ø–ª–∞—î–Ω—Å—É —É iC consulenten:")

# –°–µ—Å—ñ–π–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è —á–∞—Ç—É
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

# –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó: –∑–≤–µ—Ä—Ö—É –≤–Ω–∏–∑
for item in st.session_state.chat_history:
    with st.chat_message("üßë‚Äçüíº –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á"):
        st.markdown(item["question"])
    with st.chat_message("ü§ñ –ê—Å–∏—Å—Ç–µ–Ω—Ç"):
        st.success(item["answer"])

# –ü–æ–ª–µ –≤–≤–æ–¥—É –ü–Ü–°–õ–Ø —ñ—Å—Ç–æ—Ä—ñ—ó (–≤–Ω–∏–∑—É)
with st.chat_message("üß†"):
    query = st.text_input("–©–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?", key="input", label_visibility="collapsed", placeholder="–í–≤–µ–¥—ñ—Ç—å –∑–∞–ø–∏—Ç —Ç—É—Ç...")

# –û–±—Ä–æ–±–∫–∞ –∑–∞–ø–∏—Ç—É (–ø–µ—Ä–µ–º—ñ—â–µ–Ω–∞ –≤–Ω–∏–∑)
if query:
    with st.spinner("üîç –®—É–∫–∞—é –≤—ñ–¥–ø–æ–≤—ñ–¥—å..."):
        matches = search_index(query)
        prompt = build_prompt(query, matches)
        response = ask_gpt(prompt)

        # –î–æ–¥–∞—î–º–æ –≤ —ñ—Å—Ç–æ—Ä—ñ—é
        st.session_state.chat_history.append({
            "question": query,
            "answer": response
        })

        # –û—á–∏—â–∞—î–º–æ –ø–æ–ª–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø–∏—Ç—É
        st.experimental_rerun()
